{"version":3,"sources":["components/Abhyas/abhyas.png","components/Abhyas/logo.js","components/Abhyas/header.js","components/UI/circle.js","components/Abhyas/item.js","components/Abhyas/showitems.js","components/UI/line.js","pages/home.js","components/Abhyas/showitemdetail.js","components/Abhyas/aachoice.js","components/UI/button.js","components/UI/modal.js","components/Abhyas/testitem.js","components/Abhyas/showtests.js","pages/item.js","pages/notfound.js","pages/result.js","components/Test/header.js","components/Test/choices.js","components/Test/question.js","components/Test/choosesubject.js","components/Test/switchques.js","utils/test.js","components/Test/displayques.js","components/Test/chooseans.js","components/Test/summary.js","pages/test.js","store/dummydata.js","store/mocks.js","store/index.js","App.js","index.js"],"names":["Logo","props","className","src","logo","alt","Header","to","Circle","children","Item","navigate","useNavigate","onClick","pathname","id","toString","img","title","ShowItems","items","map","item","index","itemkey","Line","text","Home","useSelector","state","mock","ShowDetails","description","duration","marks","ques","AAChoice","Button","btnClasses","twMerge","customStyles","content","top","left","right","bottom","marginRight","transform","MModal","el","document","getElementById","appElement","isOpen","openModal","onAfterOpen","onRequestClose","onClose","style","contentLabel","onClickHandler","btntxt","Test","useState","modalIsOpen","setIsOpen","modal2IsOpen","set2IsOpen","tid","ShowTests","tests","test","ItemPage","params","useParams","find","parseInt","maxTime","maxQues","maxMarks","NotFoundPage","ResultPage","result","useLocation","userMarks","totalMarks","toFixed","THeader","onSubmitHandler","time","Date","setSeconds","getSeconds","useTimer","expiryTimestamp","onExpire","seconds","minutes","hours","Choices","isRightAnswer","kkey","choices","QuesCard","slice","q","Object","keys","key","onSelectAnswer","selectedAnswer","ChooseSubject","subjects","subject","active","SwitchQues","questions","addClass","oldQues","userRecord","qid","markForReview","quesChangeHandler","getSubjectKey","id_letter","getSummary","totalQuestion","summary","answered","unanswered","answeredReview","record","notVisited","length","generalMarkingScheme","correct","incorrect","getResults","userResponse","answerKey","markingScheme","totalQues","analytics","eachResponse","actualAnswer","comment","DisplayQues","setsubjects","useEffect","sid","sbs","subs","forEach","testitem","sub","ChooseAnswer","onMFRHandler","onChange","type","checked","isCheck","onClearHandler","onPrevHandler","onNextHandler","ShowSummary","userInitialState","finalScore","TestPage","navigator","enablePrompt","setenablePrompt","useReducer","action","answer","val","padme","nextId","oldRecord","prevId","newUserRecord","newRecords","filter","Error","user","dispatch","quesItem","getQues","isModalOpen","setisModalOpen","isTimeOut","setisTimeOut","usePrompt","choice","initialState","mques","pques","cques","Maths","A","B","C","D","Physics","Chemistry","mockSlice","createSlice","name","reducers","fetchItems","console","log","actions","store","configureStore","reducer","mockReducer","App","basename","process","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.59d7e8c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/abhyas.d4d249f8.png\";","import logo from './abhyas.png';\nconst Logo = (props) => {\n    return (\n        <div className=\"flex m-3 \" >\n        <img className=\"w-7 h-auto\" src={logo} alt=\"logo\" />\n        <h1 className=\"mx-2 font-bold text-lg text-white\">Abhyas</h1>\n        </div>\n    );\n}\nexport default Logo;","import Logo from \"./logo\";\nimport {Link} from 'react-router-dom';\nconst Header= ()=>{\n    return (\n        <header className=\"bg-primary w-full m-0 p-2 flex justify-between items-center\">\n            <Logo />\n            <div className=\"flex justify-around items-center\">\n                <Link className=\"text-white hover:text-tertiary m-2\" to='/auth/login'>Login </Link>\n                <Link className=\"text-white hover:text-tertiary m-2\" to='/auth/signup'>Signup </Link>\n                <div className='w-10 rounded-full h-10 bg-gray-200'  />\n            </div>\n\n        </header>\n    );\n}\nexport default Header;","const Circle = (props)=>{\n    return (\n        <div className={\"rounded-full m-1 \"+ props.className} >{props.children}</div>\n\n    )\n}\nexport default Circle;","import { useNavigate } from \"react-router\";\nimport Circle from '../UI/circle';\nconst Item = (props) => {\n    const navigate = useNavigate();\n    const onClickHandler = () => {\n        navigate({\n            pathname: '/home/jeeitem/' + props.id.toString()\n        })\n    }\n    return (\n        <div>\n\n            <div onClick={onClickHandler} className=\"flex w-52 flex-col items-center rounded-lg m-2 border-solid border-2 border-tertiary shadow-md move-me\">\n                <img className=\"w-full\" src={props.img} alt='testlogo' />\n                <div className=\"flex items-center justify-evenly w-full\">\n                <Circle className=\"bg-tertiary inline-block py-1 px-2 text-white\">{props.id}</Circle>\n\n<h3 className=\"font-bold space-x-1\">{props.title} </h3>\n\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Item;","import Item from \"./item\";\n\nconst ShowItems = (props) => {\n    return (\n        <div className=\"flex flex-wrap \">\n            {props.items.map((item,index) => {\n                const itemkey = `item-${index}`\n                return (\n                    <Item key={itemkey} {...item} />\n                );\n            })}\n        </div>\n    );\n}\nexport default ShowItems;","const Line= ({text})=>{\n    return (\n        <div className=\"flex items-center p-0 my-3 mx-0\">\n        <hr className=\"text-gray-600 bg-gray-600 h-1  w-1/5\"/>\n        <h3 className=\"text-gray-600 mx-2 text-sm whitespace-nowrap\" >{text}</h3>\n        <hr className=\"text-gray-600 bg-gray-600 h-1 w-4/5\"/>\n        </div>\n    ); \n}\nexport default Line;","import Header from \"../components/Abhyas/header\";\nimport ShowItems from \"../components/Abhyas/showitems\";\nimport Line from \"../components/UI/line\";\nimport { useSelector } from \"react-redux\";\nconst Home = (props) => {\n    const items = useSelector((state)=>state.mock.items)\n    return (\n        <>\n            < Header />\n            <Line text=\"Jee Main Mocks\" />\n            <ShowItems items={items} />\n        </>\n    );\n}\nexport default Home;","const ShowDetails= (props)=>{\n    return (\n        <div className=\"flex flex-col justify-around sm:flex-row\">\n            <p className=\"m-1\"> \n                {props.description}\n            </p>\n            <div className=\"flex border-2 border-solid border-gray-600 justify-center \">\n                <div className=\"flex flex-col m-2 items-center \">\n                    <p className=\"font-semibold\">Duration</p>\n                    <p>{props.duration}</p>\n                </div>\n                <div className=\"flex flex-col m-2 items-center\">\n                    <p className=\"font-semibold\"> Marks</p>\n                    <p>{props.marks}</p>\n                </div><div className=\"flex flex-col m-2 items-center\">\n                    <p className=\"font-semibold\">Ques</p>\n                    <p>{props.ques}</p>\n                </div>\n\n            </div>\n        </div>\n    );\n}\nexport default ShowDetails;\n","const AAChoice= (props)=>{\n    return (\n        <div className=\"mx-auto w-max m-2 bg-gray-300\">\n            <button className=\"border-r-2 border-solid border-primary p-2 underme\" >Active</button>\n            <button className=\"border-l-2 border-solid border-primary p-2\" >Attempted</button>\n            \n        </div>\n    );\n}\nexport default AAChoice;","import { twMerge } from 'tailwind-merge'\nconst Button= (props)=>{\n    const btnClasses = twMerge(\"border-2 px-2 py-2 rounded-md\",props.className)\n    return (\n        \n        <button onClick={props.onClick} className= {btnClasses} >\n            {props.children}\n        </button>\n    );\n}\nexport default Button;","import Modal from 'react-modal';\nimport React from \"react\";\nimport Button from './button';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nconst MModal = (props) => {\n    const el = document.getElementById('#root');\n\n    function afterOpenModal() {\n        \n        // references are now sync'd and can be accessed.\n        return;\n    }\n\n\n\n    return (\n        <Modal\n            appElement={el}\n            isOpen={props.openModal}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={props.onClose}\n            style={customStyles}\n            contentLabel=\"do's and don'ts\"\n        >\n            <div className=\"text-center p-3 m-0 w-full bg-gray-400 text-black font-semibold\">\n                <h3 className=\"inline\">{props.title}</h3>\n            </div>\n            {props.children}\n            <Button onClick={props.onClickHandler} className=\"bg-primary w-full p-3 text-white\">\n                {props.btntxt}\n            </Button>\n        </Modal>\n\n    );\n}\nexport default MModal;","import Button from \"../UI/button\";\nimport MModal from \"../UI/modal\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nconst Test = (props) => {\n    const navigate = useNavigate();\n    const [modalIsOpen, setIsOpen] = useState(false);\n    function openModal() {\n        setIsOpen(true);\n    }\n    function closeModal() {\n        setIsOpen(false);\n    }\n    const [modal2IsOpen, set2IsOpen] = useState(false);\n    function openModal2() {\n        setIsOpen(false);\n        set2IsOpen(true);\n    }\n    function closeModal2() {\n        set2IsOpen(false);\n    }\n    function startTest() {\n        set2IsOpen(false);\n        setIsOpen(false);\n        navigate(`test${props.tid}/start`)\n\n        return;\n    }\n    return (\n        <>\n            <MModal title=\"Do's and Don'ts\" onClickHandler={openModal2} btntxt=\"Continue\" openModal={modalIsOpen} onClose={closeModal}>\n                <div className=\"p-2 m-2\">\n                    <h2 className=\"font-bold text-xl \">Do's</h2>\n                    <h3 className=\"font-semibold m-1\">GENERAL GUIDELINES</h3>\n                    <ul className=\"list-disc text-sm\">\n                        <li>Make Sure Battery stuff</li>\n                        <li>Make Sure to make sure</li>\n\n\n                    </ul>\n                    <h3 className=\"font-semibold m-1\">While taking test</h3>\n                    <ul className=\"list-disc text-sm\">\n                        <li>Begin with your strongest part that is start with chemistry :)</li>\n                        <li>Go through the entire paper,attempt the question you know first </li>\n                        <li>atleast 20-30 min for revision (It help really  :,) </li>\n\n\n                    </ul>\n                    <h2 className=\"font-bold text-xl \">Don'ts</h2>\n                    <h3 className=\"font-semibold m-1\">GENERAL GUIDELINES</h3>\n                    <ul className=\"list-disc text-sm\">\n                        <li>Don't Cheat pwease := </li>\n\n\n                    </ul>\n\n                </div>\n\n            </MModal>\n            <MModal title='Instructions' onClickHandler={startTest} btntxt=\"I AM READY TO BEGIN!\" openModal={modal2IsOpen} onClose={closeModal2}>\n                <div className=\"p-2 m-2 \">\n                    <ul className=\"list-disc text-sm\">\n                        <li>Total duration of this test is <span className='font-semibold'>{\"180 minutes\"}.</span></li>\n                        <li>There will be only(?) <span className='font-semibold'>{\"75 questions\"}</span> in this test.</li>\n                        <li>There will be 3 section Physics,Chemistry,Maths each having  <span className='font-semibold'>{\"25 questions\"}</span>.</li>\n                        <li>All are <span className='font-semibold'>Single Choice Type</span>  question.</li>\n                        <li>Marking Scheme would be <span className='font-semibold'>-1 for Incorrect</span>  response and  <span className='font-semibold'>4 for correct</span>.</li>\n\n                    </ul>\n\n                    <p className=\"my-2\">\n                        Etcetera..\n                        Good Luck!\n                    </p>\n                </div>\n            </MModal>\n\n\n            <div className=\"flex justify-between shadow-lg p-2 m-2 items-center\">\n                <div className=\"rounded-full \">\n                    <p>Sno.{props.tid}</p>\n                </div>\n                <h3>{props.title}</h3>\n                <Button onClick={openModal} className=\" bg-secondary m-1 text-white hover:text-gray-200\">\n                    Start\n                </Button>\n\n            </div></>\n    );\n}\nexport default Test;","import Test from \"./testitem\";\n\nconst ShowTests= (props)=>{\n    return (\n        <div className=\"flex flex-col \">\n            {props.tests.map((test=><Test key={`test-${test.tid}`} {...test} />))}\n\n        </div>\n    );\n}\nexport default ShowTests;","import Header from \"../components/Abhyas/header\";\nimport Line from \"../components/UI/line\";\nimport  {useParams} from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport ShowDetails from \"../components/Abhyas/showitemdetail\";\nimport AAChoice from \"../components/Abhyas/aachoice\";\nimport ShowTests from \"../components/Abhyas/showtests\";\nconst ItemPage = (props) => {\n    const params= useParams();\n    const item = useSelector((state)=>state.mock.items.find((item)=>item.id===parseInt(params.id)))\n    return (\n        <>\n        <Header />\n        <Line text={item.title} />\n        <ShowDetails duration={`${item.maxTime}hr`} ques={item.maxQues} marks={item.maxMarks} description={item.description} />\n        <AAChoice />\n        <ShowTests tests={item.tests}/>\n        </>\n    );\n}\nexport default ItemPage;","const NotFoundPage= (props)=>{\n    return (\n        <div className='w-full h-full'>\n            <h1 className=\"font-bold \">OOPS,PAGE NOT FOUND :( </h1>\n\n        </div>\n    );\n}\nexport default NotFoundPage;","import Header from \"../components/Abhyas/header\";\nimport { useLocation } from \"react-router\";\nconst ResultPage= (props)=>{\n    const {state} = useLocation();\n    const result = state;\n    return (\n        <><Header />\n        <div className=\"w-full flex\">\n            <div className='w-full p-1 bg-red-600 text-white'>Marks:{result.userMarks}/{result.totalMarks}</div>\n            <div className='w-full p-1 bg-red-400 text-white'>Percentage:{(result.userMarks/result.totalMarks).toFixed(2)}</div>\n\n        </div></>\n        \n    );\n}\nexport default ResultPage;","import Button from \"../UI/button\";\nimport Logo from \"../Abhyas/logo\";\nimport { useTimer } from 'react-timer-hook';\nconst THeader = ({ title,duration,onSubmitHandler }) => {\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + duration);\n    const {\n        seconds,\n        minutes,\n        hours,\n        \n      } = useTimer({ expiryTimestamp:time, onExpire: () => onSubmitHandler(true) });\n    \n        return (\n            <header className=\"bg-primary w-full m-0 p-2 flex justify-between items-center\">\n                <div className=\"flex font-bold items-center text-white\">\n                    <Logo />\n                    <h2>{title}</h2>\n                </div>\n                <div className=\"flex justify-around w-2/5 items-center\">\n                    <p className=\"text-white\">{`${hours}hr:${minutes}m:${seconds}s`}</p>\n                    <Button onClick={onSubmitHandler} className=\"text-primary bg-white m-2\" >Submit</Button>\n                </div>\n\n            </header>\n        );\n    }\n    export default THeader;","const Choices= (props)=>{\n    return (\n        <div onClick={props.onClick} className={\"flex w-full group border-2 border-solid items-center hover:bg-green-500 \"+(props.isRightAnswer ? 'bg-green-500' : '')}>\n            {/* group hover not working fix it :, */}\n            <p className={\"rounded-full p-1 m-2 group-hover:bg-green-400 group-hover:text-white bg-gray-300 \"+(props.isRightAnswer ? 'bg-green-400 text-white' : '') }>{props.kkey}</p>\n            <div>{props.choices[props.kkey]} </div>\n\n        </div>\n    );\n}\nexport default Choices;","import Choices from \"./choices\";\n\nconst QuesCard= (props)=>{\n    return (\n        <div className='m-4 p-2 shadow-md bg-white rounded-md'>\n            <div className=\"w-full p-2 font-bold text-left space-x-1 bg-primary text-white\">\n                <h3>Q.{props.id.slice(1)} Single Choice</h3>\n\n            </div>\n            <div className=\"p-1 text-center m-1\">\n                <p>\n                    {props.q}\n                </p>\n            </div>\n            {Object.keys(props.choices).map((key)=>{\n                return (<Choices key={'choice'+key} kkey={key} onClick={()=>props.onSelectAnswer(key)} isRightAnswer={props.selectedAnswer===key} choices={props.choices} /> )\n            })}\n\n\n        </div>\n    \n    );\n}\nexport default QuesCard;","import Button from \"../UI/button\";\n\nconst ChooseSubject= (props)=>{\n    return (\n        <div className=\"flex justify-evenly flex-wrap w-full mx-1 my-2\">\n            {props.subjects.map((subject)=>{\n                return <Button key={subject.id} onClick={()=>props.onClickHandler(subject.id)} className={\"rounded-2xl py-1 hover:border-tertiary \" + (subject.active ? 'border-tertiary' : '') }>{subject.title}</Button>\n            })}    \n        </div>\n    \n    );\n}\nexport default ChooseSubject;","import Button from \"../UI/button\";\nconst SwitchQues= (props)=>{\n\n    return (\n        <div className='flex flex-wrap'>\n            {props.questions.map((ques=>{\n                let addClass='';\n                const oldQues = props.userRecord.find((q)=>q.qid===ques.id)\n                // todo: refactor to more robust way\n                if(oldQues){\n                    if(oldQues.markForReview ){\n                        if(!oldQues.selectedAnswer){\n                            addClass = 'bg-purple-500 '\n                        }\n                        else{\n\n                            addClass = 'bg-gradient-to-br from-green-500 to-purple-500 '\n                        }\n                    }\n                    \n                    else if(oldQues.selectedAnswer){\n                        addClass = 'bg-green-500 '\n                    }\n                    else{\n                        addClass = 'bg-red-500 '\n                    }\n                }\n                return (<Button key={`circle-${ques.id}`} onClick={()=>props.quesChangeHandler(ques.id)} className={'hover:border-tertiary rounded-full m-1 '+addClass +(ques.id===props.qid ? 'border-tertiary' : \"\")}>\n                {ques.id.slice(1)}   \n                </Button>)\n            }))}\n        </div>\n    );\n}\nexport default SwitchQues;","export const getSubjectKey = (qid) => {\n    const id_letter = qid.slice(0, 1)\n    let key;\n    if (id_letter === 'm') {\n        key = 'Maths'\n    }\n    else if (id_letter === 'p') {\n        key = 'Physics'\n    }\n    else {\n        key = 'Chemistry'\n    }\n    return key;\n}\nexport const getSummary = (userRecord, totalQuestion = 90) => {\n    const summary = {\n        markForReview: 0,\n        answered: 0,\n        unanswered: 0,\n        answeredReview: 0,\n    }\n    for (let record of userRecord) {\n        if (record.markForReview) {\n            if (!record.selectedAnswer) {\n                summary.markForReview++;\n            }\n            else {\n\n                summary.answeredReview++;\n            }\n        }\n\n        else if (record.selectedAnswer) {\n            summary.answered++;\n        }\n        else {\n            summary.unanswered++;\n        }\n    }\n    return { ...summary, notVisited: totalQuestion - userRecord.length }\n\n\n\n\n}\nconst generalMarkingScheme = {\n    correct:4,\n    incorrect:-1,\n}\nexport const getResults = (userResponse,answerKey,markingScheme=generalMarkingScheme)=>{\n    const totalMarks = answerKey.totalQues * markingScheme.correct;\n    let userMarks = 0;\n    const analytics = {}\n    for (let eachResponse of userResponse) {\n        if(eachResponse.selectedAnswer){\n            const actualAnswer = answerKey[getSubjectKey(eachResponse.qid.slice(0,1))].find((item)=>item.id===eachResponse.qid).right\n            if(actualAnswer===eachResponse.selectedAnswer){\n                userMarks = userMarks + markingScheme.correct;\n                analytics[eachResponse.qid] = {\n                    comment:'CORRECT!',\n                    selectedAnswer:eachResponse.selectedAnswer,\n                    actualAnswer,\n\n                }\n            }\n            else{\n                userMarks = userMarks - markingScheme.correct;\n                analytics[eachResponse.qid] = {\n                    comment:'INCORRECT!',\n                    selectedAnswer:eachResponse.selectedAnswer,\n                    actualAnswer,\n\n                }\n\n            }\n\n        }\n        \n        \n    }\n    return {analytics,userMarks,totalMarks}\n\n\n}","import { useEffect, useState } from \"react\";\nimport Circle from \"../UI/circle\";\nimport ChooseSubject from \"./choosesubject\";\nimport SwitchQues from \"./switchques\";\nimport { getSubjectKey } from \"../../utils/test\";\n\nconst DisplayQues = (props) => {\n    // Hardcoding subject for now but might change latter to add new subjects \n    const [subjects, setsubjects] = useState([{ title: 'Phy', id: 'p', active: true }, { title: 'Maths', id: 'm', active: false }, { title: 'Chem', id: 'c', active: false }])\n    \n    const onClickHandler =\n        (sid) => {\n\n            setsubjects((sbs)=>{\n                const subs = [...sbs];\n                subs.forEach((subject) => {\n                    if (sid === subject.id) {\n                        subject.active = true\n                    }\n                    else {\n                        subject.active = false\n                    }\n                })\n                return subs;\n            })\n        }\n\n    useEffect(() => {\n\n        const sid = props.qid.slice(0, 1)\n        setsubjects((sbs)=>{\n            const subs = [...sbs];\n            subs.forEach((subject) => {\n                if (sid === subject.id) {\n                    subject.active = true\n                }\n                else {\n                    subject.active = false\n                }\n            })\n            return subs;\n        })\n        \n\n    }, [props.qid])\n    return (\n        <div className=\"flex  flex-col p-2 border-[1px] rounded-md  shadow-sm \">\n            <div className=\"flex flex-col sm:flex-row\">\n                <div className=\"p-2 m-1 text-center border-[1px] border-solid rounded-lg shadow\">\n                    <p>QUESTION PAPER</p>\n                </div>\n                <div className=\"p-2 m-1 text-center border-[1px] border-solid rounded-lg shadow\">\n                    <p>INSTRUCTIONS</p>\n                </div>\n\n            </div>\n            <div className=\"shadow p-1 border-2 rounded-md\">\n                <div className='flex flex-row items-center'>\n                    <Circle className=\" w-3 h-3 bg-green-600\" />\n                    <p>Answered</p>\n                </div>\n                <div className='flex flex-row items-center'>\n                    <Circle className=\" w-3 h-3 bg-red-600\" />\n                    <p>Not Answered</p>\n                </div>\n                <div className='flex flex-row items-center'>\n                    <Circle className=\"w-3 h-3 bg-purple-600\" />\n                    <p>Mark for review</p>\n                </div>\n\n            </div>\n            <ChooseSubject onClickHandler={onClickHandler} subjects={subjects} />\n            <SwitchQues userRecord={props.userRecord} quesChangeHandler={props.quesChangeHandler} qid={props.qid} questions={props.testitem[getSubjectKey(subjects.find((sub)=>sub.active).id)]}  />\n        </div>\n\n    );\n}\nexport default DisplayQues;","import Button from \"../UI/button\";\nconst ChooseAnswer= (props)=>{\n    return (\n        <div className=\"flex items-center justify-between border-2 bg-white border-1 shadow m-3\">\n            <div>\n            <Button onClick={props.onMFRHandler} className=\"border-[1px] m-1 border-primary text-primary font-medium py-1 rounded-md hover:bg-primary hover:text-white\">\n                <input onChange={props.onMFRHandler} type='checkbox' className=\"m-1 border-primary\" checked={props.isCheck} />\n                Review\n            </Button>\n            <Button onClick={props.onClearHandler} className=\"border-[1px] mx-1 border-primary text-primary font-medium py-1 rounded-md hover:bg-primary hover:text-white\">\n                Clear\n            </Button>\n            </div>\n            <div>\n            <Button onClick={props.onPrevHandler} className=\"border-[1px] mx-1 border-primary text-primary font-medium py-1 rounded-md hover:bg-primary hover:text-white\">\n                Prev\n            </Button><Button onClick={props.onNextHandler} className=\"border-[1px] mx-1 border-primary text-primary font-medium py-1 rounded-md hover:bg-primary hover:text-white\">\n                Next\n            </Button>\n            </div>\n            \n            \n        </div>\n    );\n}\nexport default ChooseAnswer;","import Circle from \"../UI/circle\";\nconst ShowSummary = ({summary}) => {\n    return (<div className=\"flex flex-col flex-wrap m-2 justify-center\">\n        <div className='flex flex-row items-center'>\n            <Circle className=\"bg-green-600 text-white p-1 mx-2\" >{summary.answered}</Circle>\n            <p>Answered</p>\n        </div>\n        <div className='flex flex-row items-center'>\n            <Circle className=\"bg-red-600 text-white p-1 mx-2\" >{summary.unanswered}</Circle>\n            <p>Not Answered</p>\n        </div>\n        <div className='flex flex-row items-center'>\n            <Circle className=\"bg-purple-600 text-white p-1 mx-2\" >{summary.markForReview}</Circle>\n            <p>Mark for review</p>\n        </div>\n        <div className='flex flex-row items-center'>\n            <Circle className=\"bg-gradient-to-br from-green-500 to-purple-500 text-white p-1 mx-2\" >{summary.answeredReview}</Circle>\n            <p>Answered and Mark for review</p>\n        </div>\n\n    </div>\n    );\n}\nexport default ShowSummary;","import THeader from \"../components/Test/header\";\nimport { useParams, useNavigate ,usePrompt} from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport QuesCard from \"../components/Test/question\";\nimport { useReducer, useState } from \"react\";\nimport DisplayQues from \"../components/Test/displayques\";\nimport { getSubjectKey, getSummary,getResults } from \"../utils/test\";\nimport ChooseAnswer from \"../components/Test/chooseans\";\nimport MModal from \"../components/UI/modal\";\nimport ShowSummary from \"../components/Test/summary\";\nconst userInitialState = {\n    qid: 'p01',\n    selectedAnswer: null,\n    markForReview: false,\n    userRecord: [],\n    summary: null,\n    finalScore: 0,\n    analytics: null,\n\n}\nconst TestPage = (props) => {\n    const navigator = useNavigate()\n    const params = useParams()\n    const { tid } = params;\n    const [enablePrompt, setenablePrompt] = useState(true)\n    const testitem = useSelector(state => state.mock.tests.find((test) => test.tid === parseInt(tid)))\n    const userReducer = (state, action) => {\n        switch (action.type) {\n            case 'MFR':\n                return { ...state, markForReview: !state.markForReview }\n            case 'SAVE':\n                return { ...state, selectedAnswer: action.answer }\n            case 'NEXT':\n                const val = parseInt(state.qid.slice(1))\n                const padme = val >= 9 ? '' : '0'\n                const nextId = (val >= testitem[`${state.qid.slice(0, 1)}ques`]) ? state.qid.slice(0, 1) + '01' : state.qid.slice(0, 1) + padme + (val + 1).toString()\n                const oldRecord = state.userRecord.find((record) => record.qid === nextId)\n                if (oldRecord) {\n                    return { ...oldRecord, userRecord: state.userRecord }\n                }\n                return { ...userInitialState, qid: nextId, userRecord: state.userRecord }\n            case 'PREV': {\n                const val = parseInt(state.qid.slice(1))\n                const padme = val > 10 ? '' : '0'\n                const prevId = (val <= 1) ? state.qid.slice(0, 1) + '01' : state.qid.slice(0, 1) + padme + (val - 1).toString()\n                const oldRecord = state.userRecord.find((record) => record.qid === prevId)\n                if (oldRecord) {\n                    return { ...oldRecord, userRecord: state.userRecord }\n                }\n                return { ...userInitialState, qid: prevId, userRecord: state.userRecord }\n\n\n            }\n            case 'UQID': {\n                let oldRecord = state.userRecord.find((record) => record.qid === action.qid)\n                if (!oldRecord) {\n                    oldRecord = { qid: action.qid, markForReview: false, selectedAnswer: null }\n                }\n                return { ...oldRecord, qid: action.qid, userRecord: state.userRecord }\n            }\n            case 'RESET': {\n                const oldRecord = state.userRecord.find((record) => record.qid === state.qid)\n                if (oldRecord) {\n                    const newUserRecord = state.userRecord.map((record) => {\n                        if (record.qid === state.qid) {\n\n                            return { qid: state.qid, markForReview: state.markForReview, selectedAnswer: state.selectedAnswer }\n                        }\n                        return { ...record }\n                    })\n                    return { ...oldRecord, userRecord: newUserRecord }\n                }\n                return { ...userInitialState, qid: state.qid, userRecord: [...state.userRecord, { qid: state.qid, selectedAnswer: state.selectedAnswer, markForReview: state.markForReview }] }\n            }\n            case 'CLEAR': {\n                const newRecords = state.userRecord.filter((record) => record.qid !== state.qid)\n\n                return { ...userInitialState, qid: state.qid, userRecord: newRecords }\n\n\n            }\n            case 'SUMMARY': {\n                return { ...state, summary: getSummary(state.userRecord, testitem.totalQues) }\n\n            }\n            default:\n                throw new Error('No reducer case matched!');\n        }\n\n    }\n    const [user, dispatch] = useReducer(userReducer, userInitialState)\n\n    const getQues = (qid) => {\n        const key = getSubjectKey(qid);\n        return testitem[key].find((ques) => ques.id === qid)\n    }\n    const quesItem = getQues(user.qid);\n    const quesChangeHandler = (qid) => {\n        dispatch({ type: 'RESET' })\n        dispatch({ type: 'UQID', qid })\n    }\n    const [isModalOpen, setisModalOpen] = useState(false)\n    const [isTimeOut, setisTimeOut] = useState(false)\n    \n    function openModal() {\n        setenablePrompt(false)\n        setisModalOpen(true);\n    }\n    function closeModal() {\n        setisModalOpen(false);\n        setenablePrompt(true);\n\n    }\n    const onSubmitHandler = (isTimeout = false) => {\n        dispatch({ type: 'RESET' })\n        dispatch({ type: 'SUMMARY' })\n        setisTimeOut(isTimeOut)\n        openModal()\n\n    }\n    const onFinishTestHandler = () => {\n        navigator('result',{state:getResults(user.userRecord,testitem)})\n    }\n    usePrompt(\n        \"Are you sure you want to leave the test?\",\n        enablePrompt\n      );\n    return (\n        <>\n            <MModal title={isTimeOut ? 'Uh Oh Times-up!' : 'Summary'} onClickHandler={onFinishTestHandler} btntxt=\"Submit\" openModal={isModalOpen} onClose={isTimeOut ? null : closeModal}>\n                {user.summary && <ShowSummary summary={user.summary} />}\n            </MModal>\n            <THeader onSubmitHandler={onSubmitHandler} duration={testitem.duration} title={testitem.title} />\n            <div className=\"flex flex-col sm:flex-row  items-center\">\n                <div>\n                    <QuesCard selectedAnswer={user.selectedAnswer} onSelectAnswer={(choice) => dispatch({ type: 'SAVE', answer: choice })}  {...quesItem} />\n                    <ChooseAnswer isCheck={user.markForReview} onMFRHandler={() => dispatch({ type: 'MFR' })} onNextHandler={() => {\n                        dispatch({ type: 'RESET' })\n                        dispatch({ type: 'NEXT' })\n\n                    }} onPrevHandler={() => {\n                        dispatch({ type: 'RESET' })\n                        dispatch({ type: 'PREV' })\n\n                    }} onClearHandler={() => dispatch({ type: 'CLEAR' })} />\n                </div>\n                <DisplayQues userRecord={user.userRecord} quesChangeHandler={quesChangeHandler} testitem={testitem} qid={user.qid} />\n            </div>\n        </>\n    );\n}\nexport default TestPage;","const tests = [\n    {\n        tid:1,\n        title:'Mock-1',\n        duration:60*60*3,\n        totalQues:7,\n        mques:3,\n        pques:2,\n        cques:2,\n        Maths:[\n            {\n                id:'m01',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            },\n            {\n                id:'m02',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            },\n            {\n                id:'m03',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            }\n        ],\n        Physics:[\n            {\n                id:'p01',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            },\n            {\n                id:'p02',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            }\n        ],\n        Chemistry:[\n            {\n                id:'c01',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            },\n            {\n                id:'c02',\n                q:'The ground state energy of Hydrogen atom is {-13.6} eV. if the electron jumps to the ground state from 3rd excited state , the wave of emitted photon is ?',\n                choices:{\n                    A:'875',\n                    B:'1052',\n                    C:'752',\n                    D:'974',\n                },\n                right:'D',\n                                    \n            }\n        ]\n    }\n]\nexport const initialState = {\n    tests:tests,\n    items: [\n        {\n\n            id: 1,\n            maxQues:75,\n            maxTime:3,\n            maxMarks:300,\n            img:'https://akm-img-a-in.tosshub.com/indiatoday/images/story/202102/test_exam_timer_1200x768.jpeg?1tCIQgCKb3Kn94aKNdMgRC2cGoRrU1d9&size=770:433',\n            title: \"JEE DEMO TEST\",\n            description:'Top notch JEE mocks for Phy to asses your readlines',\n            tests: [\n                {\n                    tid: 1,\n                    title: 'mock 1',\n                }\n            ]\n\n        }\n    ]\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {initialState} from './dummydata';\nconst mockSlice = createSlice(\n    {\n        name: 'mocks',\n        initialState:initialState,\n        reducers:{\n            \n            fetchItems(state){\n                console.log('Fetching from dumy server...')\n                \n            }\n        }\n    }\n)\nexport const mockActions = mockSlice.actions;\nexport default mockSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mockReducer from './mocks';\nconst store = configureStore({\n    reducer: { mock:mockReducer},\n  });\n  \n  export default store;","import { Provider } from \"react-redux\";\nimport { Route, BrowserRouter, Routes } from 'react-router-dom';\nimport Home from \"./pages/home\";\nimport ItemPage from \"./pages/item\";\nimport NotFoundPage from \"./pages/notfound\";\nimport ResultPage from \"./pages/result\";\nimport TestPage from \"./pages/test\";\nimport store from \"./store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/home/:item/:id' element={<ItemPage />} />\n          <Route path='/home/:item/:id/test:tid/start' element={<TestPage />} />\n          <Route path='/home/:item/:id/test:tid/start/result' element={<ResultPage />} />\n          <Route path=\"*\" element={<NotFoundPage />} /> \n        </Routes>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}